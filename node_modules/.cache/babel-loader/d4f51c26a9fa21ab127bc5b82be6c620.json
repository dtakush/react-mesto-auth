{"ast":null,"code":"var _jsxFileName = \"/Users/dariatakush/dev/mesto-react/src/components/EditAvatarPopup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditAvatarPopup(props) {\n  _s();\n\n  //Реф\n  const userAvatarRef = React.useRef(); //Стейт-переменные\n\n  const [isLinkInputValid, setIsLinkInputValid] = React.useState(true);\n  const [linkErrorMessage, setLinkErrorMessage] = React.useState('');\n  const [buttonState, setbuttonState] = React.useState(false);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onUpdateAvatar({\n      avatar: userAvatarRef.current.value\n    });\n    linkValidation(e.target);\n    e.target.reset();\n  } //Валидация формы\n\n\n  React.useEffect(() => {\n    if (isLinkInputValid) {\n      setbuttonState(true);\n    } else {\n      setbuttonState(false);\n    }\n\n    setIsLinkInputValid(false);\n  }, [isLinkInputValid]);\n\n  function linkValidation(input) {\n    if (!input.validity.valid) {\n      setIsLinkInputValid(false);\n      setLinkErrorMessage(input.validationMessage);\n    } else {\n      setIsLinkInputValid(true);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"avatar\",\n    title: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n    buttonTitle: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    onSubmit: handleSubmit,\n    buttonState: buttonState,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: userAvatarRef,\n      name: \"link\",\n      type: \"url\",\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430\",\n      className: \"popup__input popup__input_link\",\n      id: \"avatar-popup__input_link\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `popup__error popup__error_link ${!isLinkInputValid ? 'popup__error_active' : ''}`,\n      id: \"avatar-popup__input_link-error\",\n      children: linkErrorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditAvatarPopup, \"4nnTE8HvfXqoAc7FPQkmgyLjN+M=\");\n\n_c = EditAvatarPopup;\nexport default EditAvatarPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"sources":["/Users/dariatakush/dev/mesto-react/src/components/EditAvatarPopup.js"],"names":["React","PopupWithForm","EditAvatarPopup","props","userAvatarRef","useRef","isLinkInputValid","setIsLinkInputValid","useState","linkErrorMessage","setLinkErrorMessage","buttonState","setbuttonState","handleSubmit","e","preventDefault","onUpdateAvatar","avatar","current","value","linkValidation","target","reset","useEffect","input","validity","valid","validationMessage","isOpen","onClose"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC5B;AACA,QAAMC,aAAa,GAAGJ,KAAK,CAACK,MAAN,EAAtB,CAF4B,CAI5B;;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CP,KAAK,CAACQ,QAAN,CAAe,IAAf,CAAhD;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CV,KAAK,CAACQ,QAAN,CAAe,EAAf,CAAhD;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCZ,KAAK,CAACQ,QAAN,CAAe,KAAf,CAAtC;;AAEA,WAASK,YAAT,CAAsBC,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACC,cAAF;AAEAZ,IAAAA,KAAK,CAACa,cAAN,CAAqB;AACnBC,MAAAA,MAAM,EAAEb,aAAa,CAACc,OAAd,CAAsBC;AADX,KAArB;AAIAC,IAAAA,cAAc,CAACN,CAAC,CAACO,MAAH,CAAd;AACAP,IAAAA,CAAC,CAACO,MAAF,CAASC,KAAT;AACH,GAlB2B,CAoB5B;;;AACAtB,EAAAA,KAAK,CAACuB,SAAN,CAAgB,MAAM;AAClB,QAAIjB,gBAAJ,EAAsB;AAClBM,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KAFH,MAES;AACLA,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD;;AACDL,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACL,GAPD,EAOG,CAACD,gBAAD,CAPH;;AASA,WAASc,cAAT,CAAwBI,KAAxB,EAA+B;AAC3B,QAAI,CAACA,KAAK,CAACC,QAAN,CAAeC,KAApB,EAA2B;AACvBnB,MAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACAG,MAAAA,mBAAmB,CAACc,KAAK,CAACG,iBAAP,CAAnB;AACH,KAHD,MAGO;AACHpB,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACH;AACJ;;AAED,sBACI,QAAC,aAAD;AACA,IAAA,IAAI,EAAC,QADL;AAEA,IAAA,KAAK,EAAC,uFAFN;AAGA,IAAA,WAAW,EAAC,wDAHZ;AAIA,IAAA,MAAM,EAAEJ,KAAK,CAACyB,MAJd;AAKA,IAAA,OAAO,EAAEzB,KAAK,CAAC0B,OALf;AAMA,IAAA,QAAQ,EAAEhB,YANV;AAOA,IAAA,WAAW,EAAEF,WAPb;AAAA,4BAQI;AACA,MAAA,GAAG,EAAEP,aADL;AAEA,MAAA,IAAI,EAAC,MAFL;AAEY,MAAA,IAAI,EAAC,KAFjB;AAGA,MAAA,WAAW,EAAC,sCAHZ;AAIA,MAAA,SAAS,EAAC,gCAJV;AAKA,MAAA,EAAE,EAAC,0BALH;AAMA,MAAA,QAAQ;AANR;AAAA;AAAA;AAAA;AAAA,YARJ,eAgBI;AACA,MAAA,SAAS,EAAG,kCAAiC,CAACE,gBAAD,GAAoB,qBAApB,GAA4C,EAAG,EAD5F;AAEA,MAAA,EAAE,EAAC,gCAFH;AAAA,gBAGEG;AAHF;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;GA9DQP,e;;KAAAA,e;AAgET,eAAeA,eAAf","sourcesContent":["import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup(props) {\n    //Реф\n    const userAvatarRef = React.useRef();\n\n    //Стейт-переменные\n    const [isLinkInputValid, setIsLinkInputValid] = React.useState(true);\n    const [linkErrorMessage, setLinkErrorMessage] = React.useState('');\n    const [buttonState, setbuttonState] = React.useState(false);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n      \n        props.onUpdateAvatar({\n          avatar: userAvatarRef.current.value,\n        });\n\n        linkValidation(e.target);\n        e.target.reset();\n    } \n\n    //Валидация формы\n    React.useEffect(() => {\n        if (isLinkInputValid) {\n            setbuttonState(true);\n          } else {\n            setbuttonState(false);\n          }\n          setIsLinkInputValid(false);\n    }, [isLinkInputValid])\n\n    function linkValidation(input) {\n        if (!input.validity.valid) {\n            setIsLinkInputValid(false);\n            setLinkErrorMessage(input.validationMessage);\n        } else {\n            setIsLinkInputValid(true);\n        }\n    }\n\n    return (\n        <PopupWithForm\n        name=\"avatar\"\n        title=\"Обновить аватар\"\n        buttonTitle=\"Сохранить\"\n        isOpen={props.isOpen}\n        onClose={props.onClose}\n        onSubmit={handleSubmit}\n        buttonState={buttonState}>\n            <input\n            ref={userAvatarRef}\n            name=\"link\" type=\"url\"\n            placeholder=\"Ссылка\"\n            className=\"popup__input popup__input_link\"\n            id=\"avatar-popup__input_link\"\n            required />\n\n            <span\n            className={`popup__error popup__error_link ${!isLinkInputValid ? 'popup__error_active' : ''}`}\n            id=\"avatar-popup__input_link-error\"\n            >{linkErrorMessage}</span>\n        </PopupWithForm>\n    )\n}\n\nexport default EditAvatarPopup;"]},"metadata":{},"sourceType":"module"}