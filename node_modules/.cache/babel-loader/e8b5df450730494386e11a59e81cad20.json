{"ast":null,"code":"class Api {\n  constructor({\n    baseUrl,\n    headers\n  }) {\n    this.baseUrl = baseUrl;\n    this.headers = headers;\n  } //Запрос карточек с сервера\n\n\n  getInitialCards() {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: 'GET',\n      headers: this.headers\n    }).then(this._checkResponse);\n  } //Добавление карточки на сервер\n\n\n  addCard(card) {\n    return fetch(`${this.baseUrl}/cards`, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify({\n        link: card.link,\n        name: card.name\n      })\n    }).then(this._checkResponse);\n  } //Запрос информации о пользователе    \n\n\n  getUserInfo() {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: 'GET',\n      headers: this.headers\n    }).then(this._checkResponse);\n  } //Изменение информации о пользователе\n\n\n  setUserInfo(items) {\n    return fetch(`${this.baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        name: items.name,\n        about: items.about\n      })\n    }).then(this._checkResponse);\n  } //Удаление карточки\n\n\n  deleteCard(id) {\n    return fetch(`${this.baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this.headers\n    }).then(this._checkResponse);\n  } //Добавление лайка\n\n\n  setLike(id) {\n    return fetch(`${this.baseUrl}/cards/likes/${id}`, {\n      method: 'PUT',\n      headers: this.headers\n    }).then(this._checkResponse);\n  } //Удаление лайка\n\n\n  deleteLike(id) {\n    return fetch(`${this.baseUrl}/cards/likes/${id}`, {\n      method: 'DELETE',\n      headers: this.headers\n    }).then(this._checkResponse);\n  } //Изменение аватара\n\n\n  setNewAvatar(avatar) {\n    return fetch(`${this.baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this.headers,\n      body: JSON.stringify({\n        avatar: avatar\n      })\n    }).then(this._checkResponse);\n  }\n\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n}\n\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-23',\n  headers: {\n    authorization: '3f3bc69b-6834-471f-8bfa-0881762188af',\n    'Content-Type': 'application/json'\n  }\n});\nexport default Api;","map":{"version":3,"sources":["/Users/dariatakush/dev/mesto-react/src/utils/api.js"],"names":["Api","constructor","baseUrl","headers","getInitialCards","fetch","method","then","_checkResponse","addCard","card","body","JSON","stringify","link","name","getUserInfo","setUserInfo","items","about","deleteCard","id","setLike","deleteLike","setNewAvatar","avatar","res","ok","json","Promise","reject","status","api","authorization"],"mappings":"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","sourcesContent":["class Api {\n    constructor({baseUrl, headers}) {\n      this.baseUrl = baseUrl;\n      this.headers = headers\n    }\n\n    //Запрос карточек с сервера\n    getInitialCards() {\n      return fetch(`${this.baseUrl}/cards`, {\n        method: 'GET',\n        headers: this.headers\n      })\n      .then(this._checkResponse)\n    }\n\n    //Добавление карточки на сервер\n    addCard(card) {\n      return fetch(`${this.baseUrl}/cards`, {\n        method: 'POST',\n        headers: this.headers,\n        body: JSON.stringify({\n          link: card.link,\n          name: card.name,\n        }),\n      })\n      .then(this._checkResponse)\n    }\n  \n    //Запрос информации о пользователе    \n     getUserInfo() {\n      return fetch(`${this.baseUrl}/users/me`, {\n        method: 'GET',\n        headers: this.headers\n      })\n      .then(this._checkResponse)\n    }\n\n    //Изменение информации о пользователе\n    setUserInfo(items) {\n      return fetch(`${this.baseUrl}/users/me`, {\n        method: 'PATCH',\n        headers: this.headers,\n        body: JSON.stringify({\n          name: items.name,\n          about: items.about\n        })\n      })\n      .then(this._checkResponse)\n    }\n\n    //Удаление карточки\n    deleteCard(id) {\n      return fetch(`${this.baseUrl}/cards/${id}`, {\n        method: 'DELETE',\n        headers: this.headers\n      })\n      .then(this._checkResponse)\n    }\n\n    //Добавление лайка\n    setLike(id) {\n      return fetch(`${this.baseUrl}/cards/likes/${id}`, {\n        method: 'PUT',\n        headers: this.headers\n      })\n      .then(this._checkResponse)\n    }\n\n    //Удаление лайка\n    deleteLike(id) {\n      return fetch(`${this.baseUrl}/cards/likes/${id}`, {\n        method: 'DELETE',\n        headers: this.headers\n      })\n      .then(this._checkResponse)\n    }\n  \n    //Изменение аватара\n    setNewAvatar(avatar) {\n      return fetch(`${this.baseUrl}/users/me/avatar`, {\n        method: 'PATCH',\n        headers: this.headers,\n        body: JSON.stringify({\n          avatar: avatar,\n        })\n      })\n      .then(this._checkResponse)\n    }\n\n    _checkResponse(res){\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n    }\n\n\nexport const api = new Api({\n      baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-23',\n      headers: {\n        authorization: '3f3bc69b-6834-471f-8bfa-0881762188af',\n        'Content-Type': 'application/json'\n      }\n  });\n\n\nexport default Api;"]},"metadata":{},"sourceType":"module"}