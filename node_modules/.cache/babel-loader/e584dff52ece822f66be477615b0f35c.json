{"ast":null,"code":"var _jsxFileName = \"/Users/dariatakush/dev/mesto-react/src/components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; //Контекст\n\nimport { CurrentUserContext } from '../context/CurrentUserContext';\nimport PopupWithForm from './PopupWithForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfilePopup(props) {\n  _s();\n\n  //Подписываемся на контект\n  const currentUser = React.useContext(CurrentUserContext); //Стейт-переменные\n\n  const [name, setName] = React.useState('');\n  const [description, setDescription] = React.useState(''); //Обработчики\n\n  function handleChangeName(e) {\n    setName(e.target.value);\n  }\n\n  function handleChangeDescription(e) {\n    setDescription(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault(); // Передаём значения управляемых компонентов во внешний обработчик\n\n    props.onUpdateUser({\n      name: name,\n      about: description\n    });\n  }\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    name: \"profile\",\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    buttonTitle: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\",\n    isOpen: props.isOpen,\n    onClose: props.onClose,\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      defaultValue: name,\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\",\n      className: \"popup__input popup__input_name\",\n      id: \"popup__input_name\",\n      minLength: \"2\",\n      maxLength: \"40\",\n      onChange: handleChangeName,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__error popup__error_name\",\n      id: \"popup__input_name-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      defaultValue: description,\n      name: \"about\",\n      type: \"text\",\n      placeholder: \"\\u041E \\u0441\\u0435\\u0431\\u0435\",\n      className: \"popup__input popup__input_about\",\n      id: \"popup__input_about\",\n      minLength: \"2\",\n      maxLength: \"200\",\n      onChange: handleChangeDescription,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"popup__error popup__error_about\",\n      id: \"popup__input_about-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditProfilePopup, \"G9LFWAI8ElI4DbM9ImILh8MVnsM=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/dariatakush/dev/mesto-react/src/components/EditProfilePopup.js"],"names":["React","CurrentUserContext","PopupWithForm","EditProfilePopup","props","currentUser","useContext","name","setName","useState","description","setDescription","handleChangeName","e","target","value","handleChangeDescription","handleSubmit","preventDefault","onUpdateUser","about","useEffect","isOpen","onClose"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,kBAAT,QAAmC,+BAAnC;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC7B;AACA,QAAMC,WAAW,GAAGL,KAAK,CAACM,UAAN,CAAiBL,kBAAjB,CAApB,CAF6B,CAI7B;;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBR,KAAK,CAACS,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,KAAK,CAACS,QAAN,CAAe,EAAf,CAAtC,CAN6B,CAQ7B;;AACA,WAASG,gBAAT,CAA0BC,CAA1B,EAA6B;AACzBL,IAAAA,OAAO,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACH;;AAED,WAASC,uBAAT,CAAiCH,CAAjC,EAAoC;AAChCF,IAAAA,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;AACH;;AAED,WAASE,YAAT,CAAsBJ,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACK,cAAF,GADqB,CAErB;;AACAd,IAAAA,KAAK,CAACe,YAAN,CAAmB;AACjBZ,MAAAA,IAAI,EAAEA,IADW;AAEjBa,MAAAA,KAAK,EAAEV;AAFU,KAAnB;AAID;;AAEHV,EAAAA,KAAK,CAACqB,SAAN,CAAgB,MAAM;AAClBb,IAAAA,OAAO,CAACH,WAAW,CAACE,IAAb,CAAP;AACAI,IAAAA,cAAc,CAACN,WAAW,CAACe,KAAb,CAAd;AACD,GAHH,EAGK,CAACf,WAAD,CAHL;AAKA,sBACI,QAAC,aAAD;AACA,IAAA,IAAI,EAAC,SADL;AAEA,IAAA,KAAK,EAAC,2HAFN;AAGA,IAAA,WAAW,EAAC,wDAHZ;AAIA,IAAA,MAAM,EAAED,KAAK,CAACkB,MAJd;AAKA,IAAA,OAAO,EAAElB,KAAK,CAACmB,OALf;AAMA,IAAA,QAAQ,EAAEN,YANV;AAAA,4BAOI;AAAO,MAAA,YAAY,EAAEV,IAArB;AAA2B,MAAA,IAAI,EAAC,MAAhC;AAAuC,MAAA,IAAI,EAAC,MAA5C;AAAmD,MAAA,WAAW,EAAC,6CAA/D;AAA0E,MAAA,SAAS,EAAC,gCAApF;AAAqH,MAAA,EAAE,EAAC,mBAAxH;AAA4I,MAAA,SAAS,EAAC,GAAtJ;AAA0J,MAAA,SAAS,EAAC,IAApK;AAAyK,MAAA,QAAQ,EAAEK,gBAAnL;AAAqM,MAAA,QAAQ;AAA7M;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAM,MAAA,SAAS,EAAC,gCAAhB;AAAiD,MAAA,EAAE,EAAC;AAApD;AAAA;AAAA;AAAA;AAAA,YARJ,eASI;AAAO,MAAA,YAAY,EAAEF,WAArB;AAAkC,MAAA,IAAI,EAAC,OAAvC;AAA+C,MAAA,IAAI,EAAC,MAApD;AAA2D,MAAA,WAAW,EAAC,iCAAvE;AAAgF,MAAA,SAAS,EAAC,iCAA1F;AAA4H,MAAA,EAAE,EAAC,oBAA/H;AAAoJ,MAAA,SAAS,EAAC,GAA9J;AAAkK,MAAA,SAAS,EAAC,KAA5K;AAAkL,MAAA,QAAQ,EAAEM,uBAA5L;AAAqN,MAAA,QAAQ;AAA7N;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI;AAAM,MAAA,SAAS,EAAC,iCAAhB;AAAkD,MAAA,EAAE,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GA7CQb,gB;;KAAAA,gB;AA+CT,eAAeA,gBAAf","sourcesContent":["import React from 'react';\n//Контекст\nimport { CurrentUserContext } from '../context/CurrentUserContext';\n\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditProfilePopup(props) {\n    //Подписываемся на контект\n    const currentUser = React.useContext(CurrentUserContext);\n\n    //Стейт-переменные\n    const [name, setName] = React.useState('');\n    const [description, setDescription] = React.useState('');\n\n    //Обработчики\n    function handleChangeName(e) {\n        setName(e.target.value);\n    }\n\n    function handleChangeDescription(e) {\n        setDescription(e.target.value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        // Передаём значения управляемых компонентов во внешний обработчик\n        props.onUpdateUser({\n          name: name,\n          about: description,\n        });\n      }\n\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n      }, [currentUser]);\n\n    return (\n        <PopupWithForm\n        name=\"profile\"\n        title=\"Редактировать профиль\"\n        buttonTitle=\"Сохранить\"\n        isOpen={props.isOpen}\n        onClose={props.onClose}\n        onSubmit={handleSubmit}>\n            <input defaultValue={name} name=\"name\" type=\"text\" placeholder=\"Ваше имя\" className=\"popup__input popup__input_name\" id=\"popup__input_name\" minLength=\"2\" maxLength=\"40\" onChange={handleChangeName} required />\n            <span className=\"popup__error popup__error_name\" id=\"popup__input_name-error\"></span>\n            <input defaultValue={description} name=\"about\" type=\"text\" placeholder=\"О себе\" className=\"popup__input popup__input_about\" id=\"popup__input_about\" minLength=\"2\" maxLength=\"200\" onChange={handleChangeDescription} required />\n            <span className=\"popup__error popup__error_about\" id=\"popup__input_about-error\"></span>\n        </PopupWithForm>\n    )\n}\n\nexport default EditProfilePopup;"]},"metadata":{},"sourceType":"module"}