{"ast":null,"code":"var _jsxFileName = \"/Users/dariatakush/dev/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; //Контекст\n\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'; //Основное\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer'; //Попапы\n\nimport EditProfilePopup from './EditProfilePopup';\nimport EditPlacePopup from './EditPlacePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport DeletePopup from './DeletePopup';\nimport ImagePopup from './ImagePopup';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //Переменные состояния\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [card, setCard] = React.useState({\n    name: '',\n    link: ''\n  });\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false); //Запрос информации пользователя\n\n  React.useEffect(() => {\n    api.getUserInfo().then(userInfo => {\n      setCurrentUser(userInfo);\n    }).catch(err => {\n      console.log(`Attention! ${err}`);\n    });\n  }, []); //Открытие попапа аватара\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  } //Открытие попапа профиля\n\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  } //Открытие попапа карточек\n\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  } //Открытие превью карточки\n\n\n  function handleCardClick(card) {\n    setIsImagePopupOpen(!isImagePopupOpen);\n    setCard({\n      name: card.name,\n      link: card.link\n    });\n  } //Закрытие попапов\n\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImagePopupOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditAvatar: handleEditAvatarClick,\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onCardClick: handleCardClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DeletePopup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: card,\n        isOpen: isImagePopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"B0KC/i0QT8VJtqxwg/Iv/tVH5Ok=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/dariatakush/dev/mesto-react/src/components/App.js"],"names":["React","CurrentUserContext","Header","Main","Footer","EditProfilePopup","EditPlacePopup","EditAvatarPopup","DeletePopup","ImagePopup","App","currentUser","setCurrentUser","useState","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","card","setCard","name","link","isImagePopupOpen","setIsImagePopupOpen","useEffect","api","getUserInfo","then","userInfo","catch","err","console","log","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","closeAllPopups"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,kBAAT,QAAmC,gCAAnC,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,OAAO,cAAP;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,KAAK,CAACa,QAAN,CAAe,EAAf,CAAtC;AAEA,QAAM,CAACC,qBAAD,EAAwBC,wBAAxB,IAAoDf,KAAK,CAACa,QAAN,CAAe,KAAf,CAA1D;AACA,QAAM,CAACG,sBAAD,EAAyBC,yBAAzB,IAAsDjB,KAAK,CAACa,QAAN,CAAe,KAAf,CAA5D;AACA,QAAM,CAACK,mBAAD,EAAsBC,sBAAtB,IAAgDnB,KAAK,CAACa,QAAN,CAAe,KAAf,CAAtD;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBrB,KAAK,CAACa,QAAN,CAAe;AAACS,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,IAAI,EAAE;AAAjB,GAAf,CAAxB;AACA,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CzB,KAAK,CAACa,QAAN,CAAe,KAAf,CAAhD,CARW,CAWX;;AACAb,EAAAA,KAAK,CAAC0B,SAAN,CAAgB,MAAM;AAClBC,IAAAA,GAAG,CAACC,WAAJ,GACCC,IADD,CACOC,QAAD,IAAc;AAChBlB,MAAAA,cAAc,CAACkB,QAAD,CAAd;AACH,KAHD,EAICC,KAJD,CAIQC,GAAD,IAAS;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAa,cAAaF,GAAI,EAA9B;AACF,KANF;AAOH,GARD,EAQG,EARH,EAZW,CAwBX;;AACA,WAASG,qBAAT,GAAiC;AAC7BpB,IAAAA,wBAAwB,CAAC,CAACD,qBAAF,CAAxB;AACH,GA3BU,CA6BX;;;AACA,WAASsB,sBAAT,GAAkC;AAC9BnB,IAAAA,yBAAyB,CAAC,CAACD,sBAAF,CAAzB;AACH,GAhCU,CAkCX;;;AACA,WAASqB,mBAAT,GAA+B;AAC3BlB,IAAAA,sBAAsB,CAAC,CAACD,mBAAF,CAAtB;AACH,GArCU,CAuCX;;;AACA,WAASoB,eAAT,CAAyBlB,IAAzB,EAA+B;AAC3BK,IAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AACAH,IAAAA,OAAO,CAAC;AACJC,MAAAA,IAAI,EAAEF,IAAI,CAACE,IADP;AAEJC,MAAAA,IAAI,EAAEH,IAAI,CAACG;AAFP,KAAD,CAAP;AAIH,GA9CU,CAgDX;;;AACA,WAASgB,cAAT,GAA0B;AACtBxB,IAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACAE,IAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACAE,IAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACAM,IAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACH;;AAGH,sBACI,QAAC,kBAAD,CAAoB,QAApB;AAA6B,IAAA,KAAK,EAAEd,WAApC;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAGE,QAAC,IAAD;AACA,QAAA,YAAY,EAAEwB,qBADd;AAEA,QAAA,aAAa,EAAEC,sBAFf;AAGA,QAAA,UAAU,EAAEC,mBAHZ;AAIA,QAAA,WAAW,EAAEC;AAJb;AAAA;AAAA;AAAA;AAAA,cAHF,eAUE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAVF,eAYE,QAAC,gBAAD;AACA,QAAA,MAAM,EAAEtB,sBADR;AAEA,QAAA,OAAO,EAAEuB;AAFT;AAAA;AAAA;AAAA;AAAA,cAZF,eAiBE,QAAC,cAAD;AACA,QAAA,MAAM,EAAErB,mBADR;AAEA,QAAA,OAAO,EAAEqB;AAFT;AAAA;AAAA;AAAA;AAAA,cAjBF,eAsBE,QAAC,eAAD;AACA,QAAA,MAAM,EAAEzB,qBADR;AAEA,QAAA,OAAO,EAAEyB;AAFT;AAAA;AAAA;AAAA;AAAA,cAtBF,eA2BE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cA3BF,eA4BE,QAAC,UAAD;AACA,QAAA,IAAI,EAAEnB,IADN;AAEA,QAAA,MAAM,EAAEI,gBAFR;AAGA,QAAA,OAAO,EAAEe;AAHT;AAAA;AAAA;AAAA;AAAA,cA5BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuCD;;GAhGQ7B,G;;KAAAA,G;AAkGT,eAAeA,GAAf","sourcesContent":["import React from 'react';\n\n//Контекст\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\n//Основное\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\n\n//Попапы\nimport EditProfilePopup from './EditProfilePopup';\nimport EditPlacePopup from './EditPlacePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport DeletePopup from './DeletePopup';\nimport ImagePopup from './ImagePopup';\n\nimport '../index.css';\n\nfunction App() {\n    //Переменные состояния\n    const [currentUser, setCurrentUser] = React.useState({});\n\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [card, setCard] = React.useState({name: '', link: ''});\n    const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n\n\n    //Запрос информации пользователя\n    React.useEffect(() => {\n        api.getUserInfo()\n        .then((userInfo) => {\n            setCurrentUser(userInfo);\n        })\n        .catch((err) => {\n            console.log(`Attention! ${err}`);\n         });\n    }, []);\n\n    \n\n    //Открытие попапа аватара\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n    }\n\n    //Открытие попапа профиля\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n    }\n\n    //Открытие попапа карточек\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n    }\n\n    //Открытие превью карточки\n    function handleCardClick(card) {\n        setIsImagePopupOpen(!isImagePopupOpen);\n        setCard({\n            name: card.name,\n            link: card.link\n        });\n    }\n\n    //Закрытие попапов\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsImagePopupOpen(false);\n    }\n\n\n  return (\n      <CurrentUserContext.Provider value={currentUser}>\n          <div className=\"page\">\n            <Header />\n\n            <Main \n            onEditAvatar={handleEditAvatarClick}\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onCardClick={handleCardClick}\n            />\n        \n            <Footer />\n\n            <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            />\n\n            <EditPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            />\n\n            <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            />\n\n            <DeletePopup />\n            <ImagePopup\n            card={card}\n            isOpen={isImagePopupOpen}\n            onClose={closeAllPopups}\n            />\n        </div>\n      </CurrentUserContext.Provider>\n    \n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}