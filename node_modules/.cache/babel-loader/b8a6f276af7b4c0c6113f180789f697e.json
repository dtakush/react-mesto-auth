{"ast":null,"code":"export const BASE_URL = 'https://auth.nomoreparties.co'; //Регистрация\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password\n    })\n  }).then(res => {\n    try {\n      if (res.status !== 400) {\n        return res.json();\n      }\n    } catch (e) {\n      return e;\n    }\n  }).then(res => {\n    return res;\n  }).catch(err => console.log(err));\n}; //Авторизация\n\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password\n    })\n  }).then(res => {\n    if (res.status === 200) {\n      return res.json();\n    }\n\n    if (res.status === 400) {\n      console.log(\"Не передано одно из полей\");\n    }\n\n    if (res.status === 401) {\n      console.log(\"Пользователь с email не найден\");\n    }\n  }).then(data => {\n    if (data.jwt) {\n      localStorage.setItem(\"jwt\", data.jwt);\n      return data;\n    }\n\n    return;\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Users/dariatakush/dev/react-mesto-auth/src/utils/auth.js"],"names":["BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","then","res","status","json","e","catch","err","console","log","authorize","data","jwt","localStorage","setItem"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB,C,CAEP;;AACA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AACjCK,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFwB;AAKjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBP,MAAAA,KAAK,EAAEA,KADY;AAEnBC,MAAAA,QAAQ,EAAEA;AAFS,KAAf;AAL2B,GAAvB,CAAL,CAUNO,IAVM,CAUAC,GAAD,IAAS;AACb,QAAI;AACF,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAuB;AACrB,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;AACF,KAJD,CAIE,OAAMC,CAAN,EAAQ;AACR,aAAQA,CAAR;AACD;AACF,GAlBM,EAmBNJ,IAnBM,CAmBAC,GAAD,IAAS;AACb,WAAOA,GAAP;AACD,GArBM,EAsBNI,KAtBM,CAsBCC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAtBT,CAAP;AAuBD,CAxBM,C,CA2BP;;AACA,OAAO,MAAMG,SAAS,GAAG,CAACjB,KAAD,EAAQC,QAAR,KAAqB;AAC5C,SAAOC,KAAK,CAAE,GAAEJ,QAAS,SAAb,EAAuB;AACjCK,IAAAA,MAAM,EAAE,MADyB;AAEjCC,IAAAA,OAAO,EAAE;AACP,gBAAU,kBADH;AAEP,sBAAgB;AAFT,KAFwB;AAMjCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBP,MAAAA,KAAK,EAAEA,KADY;AAEnBC,MAAAA,QAAQ,EAAEA;AAFS,KAAf;AAN2B,GAAvB,CAAL,CAUJO,IAVI,CAUEC,GAAD,IAAS;AACX,QAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtB,aAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;;AACD,QAAIF,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBK,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD;;AACD,QAAIP,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBK,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACD;AACJ,GApBI,EAqBJR,IArBI,CAqBEU,IAAD,IAAU;AACd,QAAIA,IAAI,CAACC,GAAT,EAAc;AACZC,MAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BH,IAAI,CAACC,GAAjC;AACA,aAAOD,IAAP;AACD;;AACD;AACD,GA3BI,EA4BJL,KA5BI,CA4BGC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CA5BX,CAAP;AA6BD,CA9BM","sourcesContent":["export const BASE_URL = 'https://auth.nomoreparties.co';\n\n//Регистрация\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n        \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password})\n\n  })\n  .then((res) => {\n    try {\n      if (res.status !== 400){\n        return res.json();\n      }\n    } catch(e){\n      return (e)\n    }\n  })\n  .then((res) => {\n    return res;\n  })\n  .catch((err) => console.log(err));\n};\n\n\n//Авторизация\nexport const authorize = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: \"POST\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      email: email,\n      password: password})\n  })\n    .then((res) => {\n        if (res.status === 200) {\n          return res.json();\n        }\n        if (res.status === 400) {\n          console.log(\"Не передано одно из полей\");\n        }\n        if (res.status === 401) {\n          console.log(\"Пользователь с email не найден\");\n        }\n    })\n    .then((data) => {\n      if (data.jwt) {\n        localStorage.setItem(\"jwt\", data.jwt);\n        return data;\n      }\n      return;\n    })\n    .catch((err) => console.log(err));\n};"]},"metadata":{},"sourceType":"module"}