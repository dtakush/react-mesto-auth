{"ast":null,"code":"var _jsxFileName = \"/Users/dariatakush/dev/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, Switch, withRouter, useHistory } from 'react-router-dom'; //Контекст\n\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'; //Основное\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport api from '../utils/api.js';\nimport * as auth from \"../utils/auth.js\"; //Попапы\n\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport DeletePopup from './DeletePopup';\nimport ImagePopup from './ImagePopup';\nimport InfoTooltip from './InfoTooltip';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const history = useHistory(); //Переменные состояния\n\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [loggedIn, setLoggedIn] = React.useState(false);\n  const [loginState, setLoginState] = React.useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [isTooltipPopupOpen, setIsTooltipPopupOpen] = React.useState(false);\n  const [isSuccessTooltipPopupOpen, setIsSuccessTooltipPopupOpen] = React.useState(false);\n  const [card, setCard] = React.useState({\n    name: '',\n    link: ''\n  });\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false); //Карточки\n\n  const [cards, setCards] = React.useState([]); //Регистрация пользователя\n\n  function handleRegister({\n    email,\n    password\n  }) {\n    auth.register(email, password).then(res => {\n      console.log(res);\n\n      if (res) {\n        handleIsSuccessTooltipPopupOpen();\n        history.push(\"/sign-in\");\n      } else {\n        handleIsTooltipPopupOpen();\n      }\n    }).catch(err => {\n      console.log(`Attention! ${err}`);\n    });\n  } //Авторизация пользователя\n\n\n  function handleLogin({\n    email,\n    password\n  }) {} //Запрос информации пользователя\n\n\n  React.useEffect(() => {\n    api.getUserInfo().then(userInfo => {\n      setCurrentUser(userInfo);\n    }).catch(err => {\n      console.log(`Attention! ${err}`);\n    });\n  }, []); //function handleLoginState(state) {\n  //    setLoginState(state);\n  //  }\n  //Открытие попапа проваленой регистрации\n\n  function handleIsTooltipPopupOpen() {\n    setIsTooltipPopupOpen(!isTooltipPopupOpen);\n  } //Открытие попапа успешеной регистрации\n\n\n  function handleIsSuccessTooltipPopupOpen() {\n    setIsSuccessTooltipPopupOpen(!isSuccessTooltipPopupOpen);\n  } //Открытие попапа аватара\n\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  } //Открытие попапа профиля\n\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  } //Открытие попапа карточек\n\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  } //Открытие превью карточки\n\n\n  function handleCardClick(card) {\n    setIsImagePopupOpen(!isImagePopupOpen);\n    setCard({\n      name: card.name,\n      link: card.link\n    });\n  } //Обработчик данных профиля\n\n\n  function handleUpdateUser(items) {\n    api.setUserInfo(items).then(userInfo => {\n      setCurrentUser(userInfo);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Attention! ${err}`);\n    });\n  } //Обработчик данных аватара\n\n\n  function handleUpdateAvatar(item) {\n    api.setNewAvatar(item).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Attention! ${err}`);\n    });\n  } //Закрытие попапов\n\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImagePopupOpen(false);\n    setIsTooltipPopupOpen(false);\n    setIsSuccessTooltipPopupOpen(false);\n  } //Запрос карточек\n\n\n  React.useEffect(() => {\n    api.getInitialCards().then(cards => {\n      setCards(cards);\n    }).catch(err => {\n      console.log(`Attention! ${err}`);\n    });\n  }, []); //Постановка и удаление лайка\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(likedCard => {\n      const newCards = cards.map(i => i._id === card._id ? likedCard : i);\n      setCards(newCards);\n    }).catch(err => {\n      console.log(`Attention! ${err}`);\n    });\n  } //Удаление карточки\n\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(cards.filter(c => c._id !== card._id));\n    }).catch(err => {\n      console.log(`Attention! ${err}`);\n    });\n  } //Обработка данных новой карточки\n\n\n  function handleAddCardSubmit(items) {\n    api.addCard(items).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Attention! ${err}`);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        loggedIn: loggedIn,\n        loginState: loginState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/\",\n          component: Main,\n          loggedIn: loggedIn,\n          onEditAvatar: handleEditAvatarClick,\n          onEditProfile: handleEditProfileClick,\n          onAddPlace: handleAddPlaceClick,\n          onCardClick: handleCardClick,\n          cards: cards,\n          onCardLike: handleCardLike,\n          onCardDelete: handleCardDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          children: /*#__PURE__*/_jsxDEV(Register, {\n            onRegister: handleRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddCard: handleAddCardSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DeletePopup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: card,\n        isOpen: isImagePopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        name: \"authOk\",\n        isOpen: isSuccessTooltipPopupOpen,\n        onClose: closeAllPopups,\n        title: \"\\u0412\\u044B \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0437\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u043B\\u0438\\u0441\\u044C!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        name: \"authCancel\",\n        isOpen: isTooltipPopupOpen,\n        onClose: closeAllPopups,\n        title: \"\\u0427\\u0442\\u043E-\\u0442\\u043E \\u043F\\u043E\\u0448\\u043B\\u043E \\u043D\\u0435 \\u0442\\u0430\\u043A! \\u041F\\u043E\\u043F\\u0440\\u043E\\u0431\\u0443\\u0439\\u0442\\u0435 \\u0435\\u0449\\u0451 \\u0440\\u0430\\u0437.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"IwES9wKtvm3DX72ykkEM6V/CBio=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/dariatakush/dev/react-mesto-auth/src/components/App.js"],"names":["React","Route","Switch","withRouter","useHistory","CurrentUserContext","Header","Main","Footer","Login","Register","ProtectedRoute","api","auth","EditProfilePopup","AddPlacePopup","EditAvatarPopup","DeletePopup","ImagePopup","InfoTooltip","App","history","currentUser","setCurrentUser","useState","loggedIn","setLoggedIn","loginState","setLoginState","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isTooltipPopupOpen","setIsTooltipPopupOpen","isSuccessTooltipPopupOpen","setIsSuccessTooltipPopupOpen","card","setCard","name","link","isImagePopupOpen","setIsImagePopupOpen","cards","setCards","handleRegister","email","password","register","then","res","console","log","handleIsSuccessTooltipPopupOpen","push","handleIsTooltipPopupOpen","catch","err","handleLogin","useEffect","getUserInfo","userInfo","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleCardClick","handleUpdateUser","items","setUserInfo","closeAllPopups","handleUpdateAvatar","item","setNewAvatar","data","getInitialCards","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","likedCard","newCards","map","handleCardDelete","deleteCard","filter","c","handleAddCardSubmit","addCard","newCard"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Route, Switch, withRouter, useHistory } from 'react-router-dom';\n\n//Контекст\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\n//Основное\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport Login from './Login';\nimport Register from './Register';\nimport ProtectedRoute from './ProtectedRoute';\nimport api from '../utils/api.js';\nimport * as auth from \"../utils/auth.js\";\n\n//Попапы\nimport EditProfilePopup from './EditProfilePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport DeletePopup from './DeletePopup';\nimport ImagePopup from './ImagePopup';\nimport InfoTooltip from './InfoTooltip';\n\nimport '../index.css';\n\nfunction App() {\n\n    const history = useHistory();\n\n    //Переменные состояния\n    const [currentUser, setCurrentUser] = React.useState({});\n    const [loggedIn, setLoggedIn] = React.useState(false);\n    const [loginState, setLoginState] = React.useState(false);\n\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [isTooltipPopupOpen, setIsTooltipPopupOpen] = React.useState(false);\n    const [isSuccessTooltipPopupOpen, setIsSuccessTooltipPopupOpen] = React.useState(false);\n\n    const [card, setCard] = React.useState({name: '', link: ''});\n    const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n\n    //Карточки\n    const [cards, setCards] = React.useState([]);\n\n\n    //Регистрация пользователя\n    function handleRegister({email, password}) {\n        auth.register(email, password)\n        .then((res) => {\n            console.log(res);\n            if(res) {\n                handleIsSuccessTooltipPopupOpen();\n                history.push(\"/sign-in\");\n            } else {\n                handleIsTooltipPopupOpen();\n            }  \n        })\n        .catch((err) => {\n            console.log(`Attention! ${err}`);\n        })\n    }\n\n    //Авторизация пользователя\n    function handleLogin({email, password}) {\n        \n    }\n\n    //Запрос информации пользователя\n    React.useEffect(() => {\n        api.getUserInfo()\n        .then((userInfo) => {\n            setCurrentUser(userInfo);\n        })\n        .catch((err) => {\n            console.log(`Attention! ${err}`);\n         });\n    }, []);\n\n    //function handleLoginState(state) {\n    //    setLoginState(state);\n    //  }\n\n    //Открытие попапа проваленой регистрации\n    function handleIsTooltipPopupOpen() {\n        setIsTooltipPopupOpen(!isTooltipPopupOpen);\n    }\n\n    //Открытие попапа успешеной регистрации\n    function handleIsSuccessTooltipPopupOpen() {\n        setIsSuccessTooltipPopupOpen(!isSuccessTooltipPopupOpen);\n    }\n    \n\n    //Открытие попапа аватара\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n    }\n\n    //Открытие попапа профиля\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n    }\n\n    //Открытие попапа карточек\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n    }\n\n    //Открытие превью карточки\n    function handleCardClick(card) {\n        setIsImagePopupOpen(!isImagePopupOpen);\n        setCard({\n            name: card.name,\n            link: card.link\n        });\n    }\n\n    //Обработчик данных профиля\n    function handleUpdateUser(items) {     \n        api.setUserInfo(items)\n            .then((userInfo) => {\n                setCurrentUser(userInfo);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(`Attention! ${err}`)\n            });\n    }\n\n    //Обработчик данных аватара\n    function handleUpdateAvatar(item) {\n        api.setNewAvatar(item)\n            .then((data) => {\n                setCurrentUser(data);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(`Attention! ${err}`)\n            })\n        \n    }\n\n    //Закрытие попапов\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsImagePopupOpen(false);\n        setIsTooltipPopupOpen(false);\n        setIsSuccessTooltipPopupOpen(false);\n    }\n\n\n     //Запрос карточек\n     React.useEffect(() => {\n        api.getInitialCards()\n        .then((cards) => {     \n            setCards(cards);\n        })\n        .catch((err) => {\n            console.log(`Attention! ${err}`);\n        });\n    }, []);\n\n\n    //Постановка и удаление лайка\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        \n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.changeLikeCardStatus(card._id, !isLiked)\n        .then((likedCard) => {\n            const newCards = cards.map((i) => i._id === card._id ? likedCard : i);\n            setCards(newCards);\n        })\n        .catch((err) => {\n            console.log(`Attention! ${err}`);\n        });\n    }\n\n    //Удаление карточки\n    function handleCardDelete(card) {\n        api.deleteCard(card._id)\n        .then(() => {\n            setCards(cards.filter((c) => c._id !== card._id))\n        })\n        .catch((err) => {\n            console.log(`Attention! ${err}`);\n        });\n    }\n    \n    //Обработка данных новой карточки\n    function handleAddCardSubmit(items) {\n        api.addCard(items)\n        .then((newCard) => {\n            setCards([newCard, ...cards]);\n            closeAllPopups();\n        })\n        .catch((err) => {\n            console.log(`Attention! ${err}`);\n        });\n    }\n\n\n\n  return (\n      <CurrentUserContext.Provider value={currentUser}>\n          <div className=\"page\">\n            <Header \n            loggedIn={loggedIn}\n            loginState={loginState}\n            />\n\n            <Switch>\n                <ProtectedRoute exact path=\"/\"\n                component={Main}\n                loggedIn={loggedIn}\n                onEditAvatar={handleEditAvatarClick}\n                onEditProfile={handleEditProfileClick}\n                onAddPlace={handleAddPlaceClick}\n                onCardClick={handleCardClick}\n                cards={cards}\n                onCardLike={handleCardLike}\n                onCardDelete={handleCardDelete}\n                />\n\n                <Route path=\"/sign-in\">\n                    <Login />\n                </Route>\n\n                <Route path=\"/sign-up\">\n                    <Register\n                    onRegister={handleRegister}\n                    />\n                </Route>\n            </Switch>\n\n        \n            <Footer />\n\n            <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n            />\n\n            <AddPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddCard={handleAddCardSubmit}\n            />\n\n            <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n            />\n\n            <DeletePopup />\n\n            <ImagePopup\n            card={card}\n            isOpen={isImagePopupOpen}\n            onClose={closeAllPopups}\n            />\n\n            <InfoTooltip \n            name=\"authOk\"\n            isOpen={isSuccessTooltipPopupOpen}\n            onClose={closeAllPopups}\n            title=\"Вы успешно зарегистрировались!\"\n            />\n\n            <InfoTooltip \n            name=\"authCancel\"\n            isOpen={isTooltipPopupOpen}\n            onClose={closeAllPopups}\n            title=\"Что-то пошло не так! Попробуйте ещё раз.\"\n            />\n        </div>\n      </CurrentUserContext.Provider>\n    \n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}