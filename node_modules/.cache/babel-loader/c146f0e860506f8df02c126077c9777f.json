{"ast":null,"code":"var _jsxFileName = \"/Users/dariatakush/dev/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; //Контекст\n\nimport { CurrentUserContext } from '../context/CurrentUserContext'; //Основное\n\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport api from '../utils/api.js'; //Попапы\n\nimport EditProfilePopup from './EditProfilePopup';\nimport EditPlacePopup from './EditPlacePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport DeletePopup from './DeletePopup';\nimport ImagePopup from './ImagePopup';\nimport '../index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  //Переменные состояния\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n  const [card, setCard] = React.useState({\n    name: '',\n    link: ''\n  });\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false); //Карточки\n\n  const [cards, setCards] = React.useState([]); //Запрос информации пользователя\n\n  React.useEffect(() => {\n    api.getUserInfo().then(userInfo => {\n      setCurrentUser(userInfo);\n    }).catch(err => {\n      console.log(`Attention! ${err}`);\n    });\n  }, []); //Открытие попапа аватара\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n  } //Открытие попапа профиля\n\n\n  function handleEditProfileClick() {\n    setIsNameValid(false);\n    setIsDescriptionValid(false);\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n  } //Открытие попапа карточек\n\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n  } //Открытие превью карточки\n\n\n  function handleCardClick(card) {\n    setIsImagePopupOpen(!isImagePopupOpen);\n    setCard({\n      name: card.name,\n      link: card.link\n    });\n  } //Обработчик данных профиля\n\n\n  function handleUpdateUser(items) {\n    api.setUserInfo(items).then(userInfo => {\n      setCurrentUser(userInfo);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Attention! ${err}`);\n    });\n  } //Обработчик данных аватара\n\n\n  function handleUpdateAvatar(item) {\n    api.setNewAvatar(item).then(data => {\n      setCurrentUser(data);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Attention! ${err}`);\n    });\n  } //Закрытие попапов\n\n\n  function closeAllPopups() {\n    setIsEditAvatarPopupOpen(false);\n    setIsEditProfilePopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsImagePopupOpen(false);\n  } //Запрос карточек\n\n\n  React.useEffect(() => {\n    api.getInitialCards().then(cards => {\n      setCards(cards);\n    }).catch(err => {\n      console.log(`Attention! ${err}`);\n    });\n  }, []); //Постановка и удаление лайка\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(likedCard => {\n      const newCards = cards.map(i => i._id === card._id ? likedCard : i);\n      setCards(newCards);\n    }).catch(err => {\n      console.log(`Attention! ${err}`);\n    });\n  } //Удаление карточки\n\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(deleteCard => {\n      //console.log(deleteCard);\n      const newCards = cards.filter(i => i._id !== deleteCard._id);\n      setCards(newCards);\n    }).catch(err => {\n      console.log(`Attention! ${err}`);\n    });\n  } //Обработка данных новой карточки\n\n\n  function handleAddPlaceSubmit(items) {\n    console.log(cards);\n    api.addCard(items).then(newCard => {\n      setCards([newCard, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.log(`Attention! ${err}`);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditAvatar: handleEditAvatarClick,\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onCardClick: handleCardClick,\n        cards: cards,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DeletePopup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: card,\n        isOpen: isImagePopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"amM3kU8v54zvKHBPJTGjU0o9N9o=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/dariatakush/dev/mesto-react/src/components/App.js"],"names":["React","CurrentUserContext","Header","Main","Footer","api","EditProfilePopup","EditPlacePopup","EditAvatarPopup","DeletePopup","ImagePopup","App","currentUser","setCurrentUser","useState","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","card","setCard","name","link","isImagePopupOpen","setIsImagePopupOpen","cards","setCards","useEffect","getUserInfo","then","userInfo","catch","err","console","log","handleEditAvatarClick","handleEditProfileClick","setIsNameValid","setIsDescriptionValid","handleAddPlaceClick","handleCardClick","handleUpdateUser","items","setUserInfo","closeAllPopups","handleUpdateAvatar","item","setNewAvatar","data","getInitialCards","handleCardLike","isLiked","likes","some","i","_id","changeLikeCardStatus","likedCard","newCards","map","handleCardDelete","deleteCard","filter","handleAddPlaceSubmit","addCard","newCard"],"mappings":"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","sourcesContent":["import React from 'react';\n\n//Контекст\nimport { CurrentUserContext } from '../context/CurrentUserContext';\n\n//Основное\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport api from '../utils/api.js';\n\n//Попапы\nimport EditProfilePopup from './EditProfilePopup';\nimport EditPlacePopup from './EditPlacePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport DeletePopup from './DeletePopup';\nimport ImagePopup from './ImagePopup';\n\nimport '../index.css';\n\nfunction App() {\n    //Переменные состояния\n    const [currentUser, setCurrentUser] = React.useState({});\n\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [card, setCard] = React.useState({name: '', link: ''});\n    const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\n\n    //Карточки\n    const [cards, setCards] = React.useState([]);\n\n\n    //Запрос информации пользователя\n    React.useEffect(() => {\n        api.getUserInfo()\n        .then((userInfo) => {\n            setCurrentUser(userInfo);\n        })\n        .catch((err) => {\n            console.log(`Attention! ${err}`);\n         });\n    }, []);\n\n    \n\n    //Открытие попапа аватара\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\n    }\n\n    //Открытие попапа профиля\n    function handleEditProfileClick() {\n        setIsNameValid(false);\n        setIsDescriptionValid(false);\n        setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\n    }\n\n    //Открытие попапа карточек\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\n    }\n\n    //Открытие превью карточки\n    function handleCardClick(card) {\n        setIsImagePopupOpen(!isImagePopupOpen);\n        setCard({\n            name: card.name,\n            link: card.link\n        });\n    }\n\n    //Обработчик данных профиля\n    function handleUpdateUser(items) {     \n        api.setUserInfo(items)\n            .then((userInfo) => {\n                setCurrentUser(userInfo);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(`Attention! ${err}`)\n            });\n    }\n\n    //Обработчик данных аватара\n    function handleUpdateAvatar(item) {\n        api.setNewAvatar(item)\n            .then((data) => {\n                setCurrentUser(data);\n                closeAllPopups();\n            })\n            .catch((err) => {\n                console.log(`Attention! ${err}`)\n            })\n        \n    }\n\n    //Закрытие попапов\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setIsImagePopupOpen(false);\n    }\n\n\n     //Запрос карточек\n     React.useEffect(() => {\n        api.getInitialCards()\n        .then((cards) => {     \n            setCards(cards);\n        })\n        .catch((err) => {\n            console.log(`Attention! ${err}`);\n        });\n    }, []);\n\n\n    //Постановка и удаление лайка\n    function handleCardLike(card) {\n        // Снова проверяем, есть ли уже лайк на этой карточке\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n        \n        // Отправляем запрос в API и получаем обновлённые данные карточки\n        api.changeLikeCardStatus(card._id, !isLiked)\n        .then((likedCard) => {\n            const newCards = cards.map((i) => i._id === card._id ? likedCard : i);\n            setCards(newCards);\n        })\n        .catch((err) => {\n            console.log(`Attention! ${err}`);\n        });\n    }\n\n    //Удаление карточки\n    function handleCardDelete(card) {\n        api.deleteCard(card._id)\n        .then((deleteCard) => {\n            //console.log(deleteCard);\n            const newCards = cards.filter((i) => i._id !== deleteCard._id);\n            setCards(newCards);\n        })\n        .catch((err) => {\n            console.log(`Attention! ${err}`);\n        });\n    }\n\n    //Обработка данных новой карточки\n    function handleAddPlaceSubmit(items) {\n        console.log(cards);\n        api.addCard(items)\n        .then((newCard) => {\n            setCards([newCard, ...cards]);\n            closeAllPopups();\n        })\n        .catch((err) => {\n            console.log(`Attention! ${err}`);\n        });\n    }\n\n\n\n  return (\n      <CurrentUserContext.Provider value={currentUser}>\n          <div className=\"page\">\n            <Header />\n\n            <Main \n            onEditAvatar={handleEditAvatarClick}\n            onEditProfile={handleEditProfileClick}\n            onAddPlace={handleAddPlaceClick}\n            onCardClick={handleCardClick}\n            cards={cards}\n            onCardLike={handleCardLike}\n            onCardDelete={handleCardDelete}\n            />\n        \n            <Footer />\n\n            <EditProfilePopup\n            isOpen={isEditProfilePopupOpen}\n            onClose={closeAllPopups}\n            onUpdateUser={handleUpdateUser}\n            />\n\n            <EditPlacePopup\n            isOpen={isAddPlacePopupOpen}\n            onClose={closeAllPopups}\n            onAddPlace={handleAddPlaceSubmit}\n            />\n\n            <EditAvatarPopup\n            isOpen={isEditAvatarPopupOpen}\n            onClose={closeAllPopups}\n            onUpdateAvatar={handleUpdateAvatar}\n            />\n\n            <DeletePopup />\n            <ImagePopup\n            card={card}\n            isOpen={isImagePopupOpen}\n            onClose={closeAllPopups}\n            />\n        </div>\n      </CurrentUserContext.Provider>\n    \n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}